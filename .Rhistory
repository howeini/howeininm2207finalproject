geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
#plot_grid(fig1 + theme(legend.justification = c(0,1)),
#        fig2 + theme(legend.justification = c(1,0)),
#         fig3 + theme(legend.justification = c(0,1)),
#      fig4 + theme(legend.justification = c(1,0)),
#       fig5 + theme(legend.justification = c(0,1)),
#     align = "v", axis = "lr", nrow=5,labels = LETTERS[1:5])
grid.arrange(
fig1, fig2, fig3, fig4, fig5,
ncol = 2, nrow = 3,
widths = list(c(4, 4), c(4, 4), c(4, 4)))  # Set the widths of the plots (in inches)
library(cowplot)
library(ggplot2)
library(gridExtra)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
#plot_grid(fig1 + theme(legend.justification = c(0,1)),
#        fig2 + theme(legend.justification = c(1,0)),
#         fig3 + theme(legend.justification = c(0,1)),
#      fig4 + theme(legend.justification = c(1,0)),
#       fig5 + theme(legend.justification = c(0,1)),
#     align = "v", axis = "lr", nrow=5,labels = LETTERS[1:5])
grid.arrange(
fig1, fig2, fig3, fig4, fig5,
ncol = 1, nrow = 5,
heights = c(4, 4, 4, 4, 4))
library(cowplot)
library(ggplot2)
library(gridExtra)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
#plot_grid(fig1 + theme(legend.justification = c(0,1)),
#        fig2 + theme(legend.justification = c(1,0)),
#         fig3 + theme(legend.justification = c(0,1)),
#      fig4 + theme(legend.justification = c(1,0)),
#       fig5 + theme(legend.justification = c(0,1)),
#     align = "v", axis = "lr", nrow=5,labels = LETTERS[1:5])
grid.arrange(
fig1, fig2, fig3, fig4, fig5,
ncol = 1, nrow = 5,
widths =c(4, 4, 4, 4, 4),
heights = c(4, 4, 4, 4, 4))
install.packages("egg")
install.packages("egg")
install.packages("egg")
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
#plot_grid(fig1 + theme(legend.justification = c(0,1)),
#        fig2 + theme(legend.justification = c(1,0)),
#         fig3 + theme(legend.justification = c(0,1)),
#      fig4 + theme(legend.justification = c(1,0)),
#       fig5 + theme(legend.justification = c(0,1)),
#     align = "v", axis = "lr", nrow=5,labels = LETTERS[1:5])
grid.arrange(
fig1, fig2, fig3, fig4, fig5,
ncol = 1, nrow = 5,
widths =c(4, 4, 4, 4, 4),
heights = c(4, 4, 4, 4, 4))
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
#plot_grid(fig1 + theme(legend.justification = c(0,1)),
#        fig2 + theme(legend.justification = c(1,0)),
#         fig3 + theme(legend.justification = c(0,1)),
#      fig4 + theme(legend.justification = c(1,0)),
#       fig5 + theme(legend.justification = c(0,1)),
#     align = "v", axis = "lr", nrow=5,labels = LETTERS[1:5])
ggarrange(
fig1, fig2, fig3, fig4, fig5,
ncol = 1, nrow = 5,
heights = c(4, 4, 4, 4, 4)  # Set the heights of individual plots within each row
)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
#plot_grid(fig1 + theme(legend.justification = c(0,1)),
#        fig2 + theme(legend.justification = c(1,0)),
#         fig3 + theme(legend.justification = c(0,1)),
#      fig4 + theme(legend.justification = c(1,0)),
#       fig5 + theme(legend.justification = c(0,1)),
#     align = "v", axis = "lr", nrow=5,labels = LETTERS[1:5])
ggarrange(
fig1, fig2, fig3, fig4, fig5,
ncol = 1, nrow = 5,
heights = c(1, 1, 1, 1, 1)  # Set the heights of individual plots within each row
)
fig1
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
ggsave("fig1.png", plot = fig1, width = 4, height = 4, units = "in")
ggsave("fig2.png", plot = fig2, width = 4, height = 4, units = "in")
ggsave("fig3.png", plot = fig3, width = 4, height = 4, units = "in")
ggsave("fig4.png", plot = fig4, width = 4, height = 4, units = "in")
ggsave("fig5.png", plot = fig5, width = 4, height = 4, units = "in")
# Combine the saved plots using grid.arrange
library(grid)
# Load the saved plots as grobs
fig1_grob <- rasterGrob(png::readPNG("fig1.png"))
fig2_grob <- rasterGrob(png::readPNG("fig2.png"))
fig3_grob <- rasterGrob(png::readPNG("fig3.png"))
fig4_grob <- rasterGrob(png::readPNG("fig4.png"))
fig5_grob <- rasterGrob(png::readPNG("fig5.png"))
# Arrange the grobs in a single column with 5 rows
grid.arrange(fig1_grob, fig2_grob, fig3_grob, fig4_grob, fig5_grob ncol = 1)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
ggsave("fig1.png", plot = fig1, width = 4, height = 4, units = "in")
ggsave("fig2.png", plot = fig2, width = 4, height = 4, units = "in")
ggsave("fig3.png", plot = fig3, width = 4, height = 4, units = "in")
ggsave("fig4.png", plot = fig4, width = 4, height = 4, units = "in")
ggsave("fig5.png", plot = fig5, width = 4, height = 4, units = "in")
# Combine the saved plots using grid.arrange
library(grid)
# Load the saved plots as grobs
fig1_grob <- rasterGrob(png::readPNG("fig1.png"))
fig2_grob <- rasterGrob(png::readPNG("fig2.png"))
fig3_grob <- rasterGrob(png::readPNG("fig3.png"))
fig4_grob <- rasterGrob(png::readPNG("fig4.png"))
fig5_grob <- rasterGrob(png::readPNG("fig5.png"))
# Arrange the grobs in a single column with 5 rows
grid.arrange(fig1_grob, fig2_grob, fig3_grob, fig4_grob, fig5_grob, ncol = 1)
# Creating a new dataframe with needed data
# Save date
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="DC")]]$cdcTransmissionLevel
print(head(time_series_transmission))
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
ggsave("fig1.png", plot = fig1, width = 10, height = 4, units = "in")
ggsave("fig2.png", plot = fig2, width = 10, height = 4, units = "in")
ggsave("fig3.png", plot = fig3, width = 10, height = 4, units = "in")
ggsave("fig4.png", plot = fig4, width = 10, height = 4, units = "in")
ggsave("fig5.png", plot = fig5, width = 10, height = 4, units = "in")
# Combine the saved plots using grid.arrange
library(grid)
# Load the saved plots as grobs
fig1_grob <- rasterGrob(png::readPNG("fig1.png"))
fig2_grob <- rasterGrob(png::readPNG("fig2.png"))
fig3_grob <- rasterGrob(png::readPNG("fig3.png"))
fig4_grob <- rasterGrob(png::readPNG("fig4.png"))
fig5_grob <- rasterGrob(png::readPNG("fig5.png"))
# Arrange the grobs in a single column with 5 rows
grid.arrange(fig1_grob, fig2_grob, fig3_grob, fig4_grob, fig5_grob, ncol = 1)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
ggsave("fig1.png", plot = fig1, width = 15, height = 10, units = "in")
ggsave("fig2.png", plot = fig2, width = 15, height = 10, units = "in")
ggsave("fig3.png", plot = fig3, width = 15, height = 10, units = "in")
ggsave("fig4.png", plot = fig4, width = 15, height = 10, units = "in")
ggsave("fig5.png", plot = fig5, width = 15, height = 10, units = "in")
# Combine the saved plots using grid.arrange
library(grid)
# Load the saved plots as grobs
fig1_grob <- rasterGrob(png::readPNG("fig1.png"))
fig2_grob <- rasterGrob(png::readPNG("fig2.png"))
fig3_grob <- rasterGrob(png::readPNG("fig3.png"))
fig4_grob <- rasterGrob(png::readPNG("fig4.png"))
fig5_grob <- rasterGrob(png::readPNG("fig5.png"))
# Arrange the grobs in a single column with 5 rows
grid.arrange(fig1_grob, fig2_grob, fig3_grob, fig4_grob, fig5_grob, ncol = 2, nrow=3)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(egg)
# Set the default plot size
options(repr.plot.width = 10, repr.plot.height = 20)
fig1<- ggplot(data_to_plot, aes(x=Date_Alaska,y=Cases_Alaska)) +
geom_point() +
labs(x="Date",y="Cases", title="Alaska") +
theme_bw(base_size = 14)
fig2<- ggplot(data_to_plot, aes(x=Date_California,y=Cases_California)) +
geom_point() +
labs(x="Date",y="Cases", title="California") +
theme_bw(base_size = 14)
fig3<- ggplot(data_to_plot, aes(x=Date_New_Jersey,y=Cases_New_Jersey)) +
geom_point() +
labs(x="Date",y="Cases", title="New Jersey") +
theme_bw(base_size = 14)
fig4<- ggplot(data_to_plot, aes(x=Date_Tennessee,y=Cases_Tennessee)) +
geom_point() +
labs(x="Date",y="Cases", title="Tennessee") +
theme_bw(base_size = 14)
fig5<- ggplot(data_to_plot, aes(x=Date_District_of_Columbia,y=Cases_District_of_Columbia)) +
geom_point() +
labs(x="Date",y="Cases", title="District of Columbia") +
theme_bw(base_size = 14)
ggsave("fig1.png", plot = fig1, width = 15, height = 10, units = "in")
ggsave("fig2.png", plot = fig2, width = 15, height = 10, units = "in")
ggsave("fig3.png", plot = fig3, width = 15, height = 10, units = "in")
ggsave("fig4.png", plot = fig4, width = 15, height = 10, units = "in")
ggsave("fig5.png", plot = fig5, width = 15, height = 10, units = "in")
# Combine the saved plots using grid.arrange
library(grid)
# Load the saved plots as grobs
fig1_grob <- rasterGrob(png::readPNG("fig1.png"))
fig2_grob <- rasterGrob(png::readPNG("fig2.png"))
fig3_grob <- rasterGrob(png::readPNG("fig3.png"))
fig4_grob <- rasterGrob(png::readPNG("fig4.png"))
fig5_grob <- rasterGrob(png::readPNG("fig5.png"))
# Arrange the grobs in a single column with 5 rows
grid.arrange(fig1_grob, fig2_grob, fig3_grob, fig4_grob, fig5_grob, ncol = 2, nrow=3)
knitr::include_graphics("/Users/howeini/Desktop/000012.png")
?grid.arrange
library(shiny); runApp('testapp.R')
#| out.width: "80%"
#| label: fig-top10tracks
#| fig-cap: Top 10 Spotify Tracks
#| #| fig-cap: Top 10 Spotify Artists
# Manipulate data set to obtain top 10 tracks from the "Global" charts
globaltop10tracks <- spotify %>%
filter(country == "Global") %>%
group_by(track_name) %>%
mutate(track_total_streams = sum(streams)) %>%
distinct(track_name, .keep_all = TRUE) %>%
select(uri, track_name, artist_names, album_cover, track_total_streams) %>%
arrange(desc(track_total_streams)) %>%
head(globaltop10tracks, n=10)
globaltop10artists <- spotify %>%
filter(country == "Global") %>%
group_by(artist_individual) %>%
mutate(artist_total_streams = sum(streams)) %>%
distinct(artist_individual, .keep_all = TRUE) %>%
select(artist_individual, artist_id, artist_img, artist_total_streams) %>%
arrange(desc(artist_total_streams)) %>%
head(globaltop10artists, n=10)
# Create Top 10 Tracks plotly graph
fig_globaltop10tracks <- ggplot(globaltop10tracks,
aes(x = track_total_streams,
y = fct_reorder(track_name, track_total_streams),
text = paste("</br>Total Streams:",track_total_streams,
"</br>Link:", uri))) +
geom_col() +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(size = 8)) +
labs(x="Track Total Streams",
title="Top 10 Tracks")
fig_globaltop10tracks <- ggplotly(fig_globaltop10tracks, tooltip = "text")
# Create Top 10 Artist plotly graph
fig_globaltop10artists <- ggplot(globaltop10artists,
aes(x = artist_total_streams,
y = fct_reorder(artist_individual, artist_total_streams),
text = paste("</br>Total Streams:",artist_total_streams,
"</br>Link: ", artist_id))) +
geom_col() +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(size = 8)) +
labs(x="Track Total Streams",
title="Top 10 Artists")
fig_globaltop10artists <- ggplotly(fig_globaltop10artists, tooltip = "text")
subplot(fig_globaltop10tracks, fig_globaltop10artists)
#| out.width: "80%"
#| label: fig-top10tracks
#| fig-cap: Top 10 Spotify Tracks
#| #| fig-cap: Top 10 Spotify Artists
# Manipulate data set to obtain top 10 tracks from the "Global" charts
globaltop10tracks <- spotify %>%
filter(country == "Global") %>%
group_by(track_name) %>%
mutate(track_total_streams = sum(streams)) %>%
distinct(track_name, .keep_all = TRUE) %>%
select(uri, track_name, artist_names, album_cover, track_total_streams) %>%
arrange(desc(track_total_streams)) %>%
head(globaltop10tracks, n=10)
globaltop10artists <- spotify %>%
filter(country == "Global") %>%
group_by(artist_individual) %>%
mutate(artist_total_streams = sum(streams)) %>%
distinct(artist_individual, .keep_all = TRUE) %>%
select(artist_individual, artist_id, artist_img, artist_total_streams) %>%
arrange(desc(artist_total_streams)) %>%
head(globaltop10artists, n=10)
# Create Top 10 Tracks plotly graph
fig_globaltop10tracks <- ggplot(globaltop10tracks,
aes(x = track_total_streams,
y = fct_reorder(track_name, track_total_streams),
text = paste("</br>Total Streams:",track_total_streams,
"</br>Link:", uri))) +
geom_col() +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(size = 8)) +
labs(x="Track Total Streams",
title="Top 10 Tracks")
fig_globaltop10tracks <- ggplotly(fig_globaltop10tracks, tooltip = "text")
# Create Top 10 Artist plotly graph
fig_globaltop10artists <- ggplot(globaltop10artists,
aes(x = artist_total_streams,
y = fct_reorder(artist_individual, artist_total_streams),
text = paste("</br>Total Streams:",artist_total_streams,
"</br>Link: ", artist_id))) +
geom_col() +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(size = 8)) +
labs(x="Track Total Streams",
title="Top 10 Artists")
fig_globaltop10artists <- ggplotly(fig_globaltop10artists, tooltip = "text")
subplot(fig_globaltop10tracks, fig_globaltop10artists, nrows = 2)
runApp('testapp.R')
View(spotify)
install.packages("ggcorrplot")
