{"title":"The Universality of Music","markdown":{"yaml":{"filters":["shinylive"],"execute":{"eval":true,"echo":false,"warning":false}},"headingText":"The Universality of Music","containsRefs":false,"markdown":"\n\n\nMusic is a universal thread woven into the fabric of every society, serving as a profound cultural expression. Despite the diversity among communities, music emerges as a common language that unites people.\n\nBeyond cultural significance, music holds hidden potential, particularly in the realms of business and communication. Unraveling the factors shaping song popularity offers artists and marketers invaluable insights into audience preferences. This understanding enables the creation of content that resonates deeply with diverse communities. From a communication perspective, popular songs act as poignant reflections of collective sentiments, encapsulating societal moods, highlighting emerging trends, and embodying cultural shifts.\n\n### Introduction to Data Story\n\nWe aim to answer the question: [**what factors shape the popularity of songs in today's diverse music landscape?**]{.underline} A general understanding of music landscape in January 2022 will be provided before we explore the different factors that shape popularity of songs.\n\n::: {.callout-note appearance=\"simple\"}\n*The following analysis is based on a data set of Spotify's 'Weekly Top Songs' charts for both individual countries and the global landscape throughout January 2022. The raw data set can be found on [Kaggle](https://www.kaggle.com/datasets/yelexa/spotify200).*\n:::\n\n```{r}\n# Load library\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggiraph) # To make ggplot2 interactive\nlibrary(plotly)\nlibrary(forcats)\nlibrary(scales)\nlibrary(svglite) # For ggplot Carousel\nlibrary(slickR) # For ggplot Carousel \n\n# Read CSV file\nraw <- read_csv(\"Jan2022_Spotify_Weekly_Top_200_Songs_Streaming_Data_by_country_view_view.csv\")\n\n# Remove unnecessary columns\nspotify <- subset(raw, select = -c(X_1, artists_num, collab, album_num_tracks, pivot))\n```\n\n## General Music Landscape of January 2022\n\n::: panel-tabset\n## Top 10 Artists\n\n-   **The Weeknd** claims the top spot, commanding a remarkable total of over 700 million streams\n-   **Pop** is the predominant genre among these elite top 10 Spotify artists.\n\n```{r}\n#| out.width: \"90%\"\n#| label: fig-top10artist\n#| fig-cap: Top 10 Spotify Artists in January 2022\n\n# Manipulate data set to obtain top 10 tracks from the \"Global\" charts\n\nglobaltop10artists <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(artist_individual) %>% \n  mutate(artist_total_streams = sum(streams)) %>% \n  distinct(artist_individual, .keep_all = TRUE) %>%\n  select(artist_individual, artist_id, artist_img, artist_total_streams, artist_genre) %>%\n  arrange(desc(artist_total_streams)) %>%\n  head(globaltop10artists, n=10)\n\n\n# Create Top 10 Artist plotly graph\nfig_globaltop10artists <- ggplot(globaltop10artists, \n            aes(x = artist_total_streams, \n                y = fct_reorder(artist_individual, artist_total_streams),\n                customdata = artist_id,\n                text = paste(\"</br>Total Streams:\", artist_total_streams,\n                             \"</br>Artist Link: <a href=\", artist_id, \n                             \" target='_blank'>\", artist_id, \"</a>\",\n                             \"</br>Artist Genre:\", artist_genre))) +\n  geom_col() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 8)) + \n  labs(x=\"Total Streams\", title = \"Top 10 Spotify Artists\")\n\nfig_globaltop10artists <- ggplotly(fig_globaltop10artists, tooltip = \"text\") %>%\n  layout(hoverlabel = list(bgcolor = \"white\", \n                           bordercolor = \"black\",\n                           align = \"left\",\n                           persistent = TRUE),\n         hovertemplate = \"%{text}<extra></extra>\") %>%\n  layout(title = list(text = \"Top 10 Spotify Artists\", x = 0.5, y = 0.95, xanchor = \"center\", yanchor = \"top\"))\n\nfig_globaltop10artists\n```\n\n```{r}\n#| out.width: \"90%\"\n#| label: fig-top10artistwc\n#| fig-cap: Genres of the Top 10 Spotify Artists\n# Create a new data frame with unique words in artist genre and their frequencies\ngenre_frequency_df <- globaltop10artists %>%\n  separate_rows(artist_genre, sep = \" \") %>%\n  group_by(word = tolower(artist_genre)) %>%\n  summarise(frequency = n())\n\n# Print the new data frame\n#print(word_frequency_df)\n\n# library\nlibrary(wordcloud2) \n \n# have a look to the example dataset\n# head(demoFreq)\n\n# Basic plot\ngenre_wc <- wordcloud2(data=genre_frequency_df, size=1,\n                       fontFamily = \"Verdana\", fontWeight = \"bold\",\n           color=rep_len(c(\"lightgreen\",\"grey\"), nrow(genre_frequency_df)),\n           shape = \"circle\")\ngenre_wc\n```\n\n## Top 10 Songs\n\n-   An intriguing observation arises as we note that **the creators behind the top 10 songs differ from the artists in the top 10 list**\n-   This variance may suggest a **distinction between short-term and long-term popularity**, given that the artists behind these songs seem to have achieved recognition primarily through a single hit\n\n```{r}\n#| out.width: \"90%\"\n#| label: fig-top10songs\n#| fig-cap: Top 10 Spotify Songs in January 2022\n\n# Manipulate data set to obtain top 10 tracks from the \"Global\" charts\n\nglobaltop10tracks <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(track_name) %>% \n  mutate(track_total_streams = sum(streams)) %>% \n  distinct(track_name, .keep_all = TRUE) %>% \n  select(uri, track_name, artist_names, album_cover, track_total_streams) %>%\n  arrange(desc(track_total_streams)) %>%\n  head(globaltop10tracks, n=10)\n\n# Create Top 10 Tracks plotly graph\nfig_globaltop10tracks <- ggplot(globaltop10tracks, \n            aes(x = track_total_streams, \n                y = fct_reorder(track_name, track_total_streams),\n                customdata = uri,\n                text = paste(\"</br>Total Streams:\", track_total_streams,\n                             \"</br>Artists:\", str_wrap(artist_names, width = 50),\n                              \"</br>Track Link: <a href=\", uri, \n                             \" target='_blank'>\", uri, \"</a>\"))) +\n  geom_col() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 8)) + \n  labs(x=\"Total Streams\", title = \"Top 10 Spotify Songs\")\n\nfig_globaltop10tracks <- ggplotly(fig_globaltop10tracks, tooltip = \"text\") %>%\n  layout(hoverlabel = list(bgcolor = \"white\", \n                           bordercolor = \"black\",\n                           align = \"left\",\n                           persistent = TRUE),\n         hovertemplate = \"%{text}<extra></extra>\") %>%\n  layout(title = list(text = \"Top 10 Spotify Songs\", x = 0.5, y = 0.95, xanchor = \"center\", yanchor = \"top\"))\n\nfig_globaltop10tracks\n```\n\n## Distribution of Song Attributes\n\n-   Explore the interface below to understand the general distribution for different song attributes\n-   The source for these attributes' descriptions can be found [here](https://developer.spotify.com/documentation/web-api/reference/get-several-audio-features)\n\n<iframe height=\"800\" width=\"100%\" frameborder=\"no\" src=\"https://howeini.shinyapps.io/AttributeDist/\">\n\n</iframe>\n\n-   In general, it appears that the popular songs in the landscape of January 2022 are\n    -   Danceable\n    -   Have moderate to high energy\n    -   Have little speech element\n    -   Not very acoustic\n    -   Very likely contains vocals\n    -   Unlikely to be performed live\n    -   Could sound positive or negative\n-   These songs are also likely to be\n    -   In the C♯/D♭ key\n    -   On the Major scale\n    -   Of normal volume\n    -   Have varied pace\n    -   Around 3 minutes long\n:::\n\n## Long-term Popularity\n\n-   Long-term popularity is defined as the total streams of a song in the entire month of January, across all charts\n-   Will be discovering what attributes make a song \"timeless\"\n\n### Correlation Matrix\n\n```{r}\nlibrary(plotly)\n\nglobal <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(track_name) %>% \n  mutate(track_total_streams = sum(streams)) %>% \n  distinct(track_name, .keep_all = TRUE)\n\n# Compute the correlation matrix\ncorrelation_matrix <- cor(global[, c(\"danceability\", \"energy\", \"key\", \"mode\", \"loudness\", \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\", \"valence\", \"tempo\", \"duration\", \"track_total_streams\")])\n\n# Create interactive heatmap using plot_ly\nheatmap <- plot_ly(\n  x = colnames(correlation_matrix),\n  y = colnames(correlation_matrix),\n  z = correlation_matrix,\n  type = \"heatmap\",\n  colorscale = \"Portland\",\n  colorbar = list(title = \"Correlation\"),\n  text = correlation_matrix,\n  hoverinfo = \"text\"\n)\n\n# Show the interactive heatmap\nheatmap\n```\n\n### Global vs. Local\n\n<iframe height=\"500\" width=\"100%\" frameborder=\"no\" src=\"https://howeini.shinyapps.io/WorldMap/\">\n\n</iframe>\n\n## Short-term Popularity\n\n-   Short-term popularity is analysed by taking rank minus previous rank. Since 1 is the highest ranking, a negative integer would indicate that the song has risen up in the charts while a positive integer would indicate a fall in ranking. The value of the integer would indicate the extent of change i.e. larger integer implies greater change.\n-   Will also be examining peak rank and weeks on chart\n\n### Placeholder for Correlation Matrix\n\n```{r}\nlibrary(plotly)\n# NEED TO ADD NEW COLUMN CALCULATING RANK-PREVRANK\nglobal <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(track_name) %>% \n  mutate(track_total_streams = sum(streams)) %>% \n  distinct(track_name, .keep_all = TRUE)\n\n# Compute the correlation matrix\ncorrelation_matrix <- cor(global[, c(\"danceability\", \"energy\", \"key\", \"mode\", \"loudness\", \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\", \"valence\", \"tempo\", \"duration\", \"rank\", \"peak_rank\", \"weeks_on_chart\")])\n\n# Create interactive heatmap using plot_ly\nheatmap <- plot_ly(\n  x = colnames(correlation_matrix),\n  y = colnames(correlation_matrix),\n  z = correlation_matrix,\n  type = \"heatmap\",\n  colorscale = \"Portland\",\n  colorbar = list(title = \"Correlation\"),\n  text = correlation_matrix,\n  hoverinfo = \"text\"\n)\n\n# Show the interactive heatmap\nheatmap\n```\n\n## Other Factors (KIV)\n\n-   Does release_date have any influence? Maybe can see 50 songs with the earliest release_date so that we can see if they have any similar attributes\n-   Artist genre?\n\n## Conclusion\n\n-   What are the most important song attributes influencing a song's popularity?\n-   What is the ideal range for duration of a song?\n-   What genre?\n-   Do these answers differ based on language and region?\n","srcMarkdownNoYaml":"\n\n## The Universality of Music\n\nMusic is a universal thread woven into the fabric of every society, serving as a profound cultural expression. Despite the diversity among communities, music emerges as a common language that unites people.\n\nBeyond cultural significance, music holds hidden potential, particularly in the realms of business and communication. Unraveling the factors shaping song popularity offers artists and marketers invaluable insights into audience preferences. This understanding enables the creation of content that resonates deeply with diverse communities. From a communication perspective, popular songs act as poignant reflections of collective sentiments, encapsulating societal moods, highlighting emerging trends, and embodying cultural shifts.\n\n### Introduction to Data Story\n\nWe aim to answer the question: [**what factors shape the popularity of songs in today's diverse music landscape?**]{.underline} A general understanding of music landscape in January 2022 will be provided before we explore the different factors that shape popularity of songs.\n\n::: {.callout-note appearance=\"simple\"}\n*The following analysis is based on a data set of Spotify's 'Weekly Top Songs' charts for both individual countries and the global landscape throughout January 2022. The raw data set can be found on [Kaggle](https://www.kaggle.com/datasets/yelexa/spotify200).*\n:::\n\n```{r}\n# Load library\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggiraph) # To make ggplot2 interactive\nlibrary(plotly)\nlibrary(forcats)\nlibrary(scales)\nlibrary(svglite) # For ggplot Carousel\nlibrary(slickR) # For ggplot Carousel \n\n# Read CSV file\nraw <- read_csv(\"Jan2022_Spotify_Weekly_Top_200_Songs_Streaming_Data_by_country_view_view.csv\")\n\n# Remove unnecessary columns\nspotify <- subset(raw, select = -c(X_1, artists_num, collab, album_num_tracks, pivot))\n```\n\n## General Music Landscape of January 2022\n\n::: panel-tabset\n## Top 10 Artists\n\n-   **The Weeknd** claims the top spot, commanding a remarkable total of over 700 million streams\n-   **Pop** is the predominant genre among these elite top 10 Spotify artists.\n\n```{r}\n#| out.width: \"90%\"\n#| label: fig-top10artist\n#| fig-cap: Top 10 Spotify Artists in January 2022\n\n# Manipulate data set to obtain top 10 tracks from the \"Global\" charts\n\nglobaltop10artists <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(artist_individual) %>% \n  mutate(artist_total_streams = sum(streams)) %>% \n  distinct(artist_individual, .keep_all = TRUE) %>%\n  select(artist_individual, artist_id, artist_img, artist_total_streams, artist_genre) %>%\n  arrange(desc(artist_total_streams)) %>%\n  head(globaltop10artists, n=10)\n\n\n# Create Top 10 Artist plotly graph\nfig_globaltop10artists <- ggplot(globaltop10artists, \n            aes(x = artist_total_streams, \n                y = fct_reorder(artist_individual, artist_total_streams),\n                customdata = artist_id,\n                text = paste(\"</br>Total Streams:\", artist_total_streams,\n                             \"</br>Artist Link: <a href=\", artist_id, \n                             \" target='_blank'>\", artist_id, \"</a>\",\n                             \"</br>Artist Genre:\", artist_genre))) +\n  geom_col() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 8)) + \n  labs(x=\"Total Streams\", title = \"Top 10 Spotify Artists\")\n\nfig_globaltop10artists <- ggplotly(fig_globaltop10artists, tooltip = \"text\") %>%\n  layout(hoverlabel = list(bgcolor = \"white\", \n                           bordercolor = \"black\",\n                           align = \"left\",\n                           persistent = TRUE),\n         hovertemplate = \"%{text}<extra></extra>\") %>%\n  layout(title = list(text = \"Top 10 Spotify Artists\", x = 0.5, y = 0.95, xanchor = \"center\", yanchor = \"top\"))\n\nfig_globaltop10artists\n```\n\n```{r}\n#| out.width: \"90%\"\n#| label: fig-top10artistwc\n#| fig-cap: Genres of the Top 10 Spotify Artists\n# Create a new data frame with unique words in artist genre and their frequencies\ngenre_frequency_df <- globaltop10artists %>%\n  separate_rows(artist_genre, sep = \" \") %>%\n  group_by(word = tolower(artist_genre)) %>%\n  summarise(frequency = n())\n\n# Print the new data frame\n#print(word_frequency_df)\n\n# library\nlibrary(wordcloud2) \n \n# have a look to the example dataset\n# head(demoFreq)\n\n# Basic plot\ngenre_wc <- wordcloud2(data=genre_frequency_df, size=1,\n                       fontFamily = \"Verdana\", fontWeight = \"bold\",\n           color=rep_len(c(\"lightgreen\",\"grey\"), nrow(genre_frequency_df)),\n           shape = \"circle\")\ngenre_wc\n```\n\n## Top 10 Songs\n\n-   An intriguing observation arises as we note that **the creators behind the top 10 songs differ from the artists in the top 10 list**\n-   This variance may suggest a **distinction between short-term and long-term popularity**, given that the artists behind these songs seem to have achieved recognition primarily through a single hit\n\n```{r}\n#| out.width: \"90%\"\n#| label: fig-top10songs\n#| fig-cap: Top 10 Spotify Songs in January 2022\n\n# Manipulate data set to obtain top 10 tracks from the \"Global\" charts\n\nglobaltop10tracks <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(track_name) %>% \n  mutate(track_total_streams = sum(streams)) %>% \n  distinct(track_name, .keep_all = TRUE) %>% \n  select(uri, track_name, artist_names, album_cover, track_total_streams) %>%\n  arrange(desc(track_total_streams)) %>%\n  head(globaltop10tracks, n=10)\n\n# Create Top 10 Tracks plotly graph\nfig_globaltop10tracks <- ggplot(globaltop10tracks, \n            aes(x = track_total_streams, \n                y = fct_reorder(track_name, track_total_streams),\n                customdata = uri,\n                text = paste(\"</br>Total Streams:\", track_total_streams,\n                             \"</br>Artists:\", str_wrap(artist_names, width = 50),\n                              \"</br>Track Link: <a href=\", uri, \n                             \" target='_blank'>\", uri, \"</a>\"))) +\n  geom_col() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_text(size = 8)) + \n  labs(x=\"Total Streams\", title = \"Top 10 Spotify Songs\")\n\nfig_globaltop10tracks <- ggplotly(fig_globaltop10tracks, tooltip = \"text\") %>%\n  layout(hoverlabel = list(bgcolor = \"white\", \n                           bordercolor = \"black\",\n                           align = \"left\",\n                           persistent = TRUE),\n         hovertemplate = \"%{text}<extra></extra>\") %>%\n  layout(title = list(text = \"Top 10 Spotify Songs\", x = 0.5, y = 0.95, xanchor = \"center\", yanchor = \"top\"))\n\nfig_globaltop10tracks\n```\n\n## Distribution of Song Attributes\n\n-   Explore the interface below to understand the general distribution for different song attributes\n-   The source for these attributes' descriptions can be found [here](https://developer.spotify.com/documentation/web-api/reference/get-several-audio-features)\n\n<iframe height=\"800\" width=\"100%\" frameborder=\"no\" src=\"https://howeini.shinyapps.io/AttributeDist/\">\n\n</iframe>\n\n-   In general, it appears that the popular songs in the landscape of January 2022 are\n    -   Danceable\n    -   Have moderate to high energy\n    -   Have little speech element\n    -   Not very acoustic\n    -   Very likely contains vocals\n    -   Unlikely to be performed live\n    -   Could sound positive or negative\n-   These songs are also likely to be\n    -   In the C♯/D♭ key\n    -   On the Major scale\n    -   Of normal volume\n    -   Have varied pace\n    -   Around 3 minutes long\n:::\n\n## Long-term Popularity\n\n-   Long-term popularity is defined as the total streams of a song in the entire month of January, across all charts\n-   Will be discovering what attributes make a song \"timeless\"\n\n### Correlation Matrix\n\n```{r}\nlibrary(plotly)\n\nglobal <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(track_name) %>% \n  mutate(track_total_streams = sum(streams)) %>% \n  distinct(track_name, .keep_all = TRUE)\n\n# Compute the correlation matrix\ncorrelation_matrix <- cor(global[, c(\"danceability\", \"energy\", \"key\", \"mode\", \"loudness\", \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\", \"valence\", \"tempo\", \"duration\", \"track_total_streams\")])\n\n# Create interactive heatmap using plot_ly\nheatmap <- plot_ly(\n  x = colnames(correlation_matrix),\n  y = colnames(correlation_matrix),\n  z = correlation_matrix,\n  type = \"heatmap\",\n  colorscale = \"Portland\",\n  colorbar = list(title = \"Correlation\"),\n  text = correlation_matrix,\n  hoverinfo = \"text\"\n)\n\n# Show the interactive heatmap\nheatmap\n```\n\n### Global vs. Local\n\n<iframe height=\"500\" width=\"100%\" frameborder=\"no\" src=\"https://howeini.shinyapps.io/WorldMap/\">\n\n</iframe>\n\n## Short-term Popularity\n\n-   Short-term popularity is analysed by taking rank minus previous rank. Since 1 is the highest ranking, a negative integer would indicate that the song has risen up in the charts while a positive integer would indicate a fall in ranking. The value of the integer would indicate the extent of change i.e. larger integer implies greater change.\n-   Will also be examining peak rank and weeks on chart\n\n### Placeholder for Correlation Matrix\n\n```{r}\nlibrary(plotly)\n# NEED TO ADD NEW COLUMN CALCULATING RANK-PREVRANK\nglobal <- spotify %>% \n  filter(country == \"Global\") %>% \n  group_by(track_name) %>% \n  mutate(track_total_streams = sum(streams)) %>% \n  distinct(track_name, .keep_all = TRUE)\n\n# Compute the correlation matrix\ncorrelation_matrix <- cor(global[, c(\"danceability\", \"energy\", \"key\", \"mode\", \"loudness\", \"speechiness\", \"acousticness\", \"instrumentalness\", \"liveness\", \"valence\", \"tempo\", \"duration\", \"rank\", \"peak_rank\", \"weeks_on_chart\")])\n\n# Create interactive heatmap using plot_ly\nheatmap <- plot_ly(\n  x = colnames(correlation_matrix),\n  y = colnames(correlation_matrix),\n  z = correlation_matrix,\n  type = \"heatmap\",\n  colorscale = \"Portland\",\n  colorbar = list(title = \"Correlation\"),\n  text = correlation_matrix,\n  hoverinfo = \"text\"\n)\n\n# Show the interactive heatmap\nheatmap\n```\n\n## Other Factors (KIV)\n\n-   Does release_date have any influence? Maybe can see 50 songs with the earliest release_date so that we can see if they have any similar attributes\n-   Artist genre?\n\n## Conclusion\n\n-   What are the most important song attributes influencing a song's popularity?\n-   What is the ideal range for duration of a song?\n-   What genre?\n-   Do these answers differ based on language and region?\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"filters":["shinylive"],"output-file":"about.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":{"light":"simplex","dark":"slate"},"page-layout":"full"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}