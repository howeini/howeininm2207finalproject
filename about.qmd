---
title: "What factors shape the popularity of songs in today's diverse music landscape?"
filters:
  - shinylive
execute: 
  eval: true
  echo: false
  warning: false
---
## Introduction to Data Story
-   Explain why this is an important question
-   Explain data set
-   Explain flow of data story: general understanding of music landscape in January 2022, followed by exploration of what factors shape popularity of songs

```{r}
# Load library
library(tidyverse)
library(ggplot2)
library(ggiraph) # To make ggplot2 interactive
library(plotly)
library(forcats)
library(scales)
library(svglite) # For ggplot Carousel
library(slickR) # For ggplot Carousel 

# Read CSV file
raw <- read_csv("Jan2022_Spotify_Weekly_Top_200_Songs_Streaming_Data_by_country_view_view.csv")

# Remove unnecessary columns
spotify <- subset(raw, select = -c(X_1, artists_num, artist_genre, collab, album_num_tracks, pivot))
```

## General Music Landscape Based on Global Chart

-   Track ranking is determined by sum of total streams
-   Artist ranking is determined by sum of total streams

```{r}
#| out.width: "90%"
#| label: fig-top10
#| fig-cap: Overall Top 10 Spotify Tracks and Artists in January 2022

# Manipulate data set to obtain top 10 tracks from the "Global" charts

globaltop10tracks <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(track_name) %>% 
  mutate(track_total_streams = sum(streams)) %>% 
  distinct(track_name, .keep_all = TRUE) %>% 
  select(uri, track_name, artist_names, album_cover, track_total_streams) %>%
  arrange(desc(track_total_streams)) %>%
  head(globaltop10tracks, n=10)

globaltop10artists <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(artist_individual) %>% 
  mutate(artist_total_streams = sum(streams)) %>% 
  distinct(artist_individual, .keep_all = TRUE) %>%
  select(artist_individual, artist_id, artist_img, artist_total_streams) %>%
  arrange(desc(artist_total_streams)) %>%
  head(globaltop10artists, n=10)

# Create Top 10 Tracks plotly graph
fig_globaltop10tracks <- ggplot(globaltop10tracks, 
            aes(x = track_total_streams, 
                y = fct_reorder(track_name, track_total_streams),
                customdata = uri,
                text = paste("</br>Total Streams:", track_total_streams,
                             "</br>Artists:", str_wrap(artist_names, width = 50),
                              "</br>Track Link: <a href=", uri, 
                             " target='_blank'>", uri, "</a>"))) +
  geom_col() +
  theme(axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) + 
  labs(x="Total Streams")

fig_globaltop10tracks <- ggplotly(fig_globaltop10tracks, tooltip = "text") %>%
  layout(hoverlabel = list(bgcolor = "white", 
                           bordercolor = "black",
                           align = "left",
                           persistent = TRUE),
         hovertemplate = "%{text}<extra></extra>")


# Create Top 10 Artist plotly graph
fig_globaltop10artists <- ggplot(globaltop10artists, 
            aes(x = artist_total_streams, 
                y = fct_reorder(artist_individual, artist_total_streams),
                customdata = artist_id,
                text = paste("</br>Total Streams:",artist_total_streams,
                             "</br>Artist Link: <a href=", artist_id, 
                             " target='_blank'>", artist_id, "</a>"))) +
  geom_col() +
  theme(axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) + 
  labs(x="Total Streams")

fig_globaltop10artists <- ggplotly(fig_globaltop10artists, tooltip = "text") %>%
  layout(hoverlabel = list(bgcolor = "white", 
                           bordercolor = "black",
                           align = "left",
                           persistent = TRUE),
         hovertemplate = "%{text}<extra></extra>")

subplot(fig_globaltop10tracks, fig_globaltop10artists, 
        nrows = 2, widths = 1, margin =0.02,
        shareX = TRUE) %>% 
        layout(title = 'Top 10 Tracks and Artists in January 2022', position = "top center")
```

### Placeholder for Distribution of Attributes
-   The histogram below shows the general distribution for each song attributes in January 2022

-   This helps you understand generally what type of songs made it on to the Top 200 charts

-   Will incorporate descriptions for each song attribute into the Shiny app

-   Will also include follow the Shiny example 6, for a "carousel" to list the other attributes (key, mode, loudness, tempo, duration). Current attributes in this histogram have values 0.0-1.0

<iframe height="500" width="100%" frameborder="no" src="https://howeini.shinyapps.io/AttributeDist/"> </iframe>

## Long-term Popularity
- Long-term popularity is defined as the total streams of a song in the entire month of January, across all charts
- Will be discovering what attributes make a song "timeless"

### Correlation Matrix
```{r}
library(plotly)

global <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(track_name) %>% 
  mutate(track_total_streams = sum(streams)) %>% 
  distinct(track_name, .keep_all = TRUE)

# Compute the correlation matrix
correlation_matrix <- cor(global[, c("danceability", "energy", "key", "mode", "loudness", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration", "track_total_streams")])

# Create interactive heatmap using plot_ly
heatmap <- plot_ly(
  x = colnames(correlation_matrix),
  y = colnames(correlation_matrix),
  z = correlation_matrix,
  type = "heatmap",
  colorscale = "Portland",
  colorbar = list(title = "Correlation"),
  text = correlation_matrix,
  hoverinfo = "text"
)

# Show the interactive heatmap
heatmap
```

### Global vs. Local
<iframe height="500" width="100%" frameborder="no" src="https://howeini.shinyapps.io/WorldMap/"> </iframe>

## Short-term Popularity
- Short-term popularity is analysed by taking rank minus previous rank. Since 1 is the highest ranking, a negative integer would indicate that the song has risen up in the charts while a positive integer would indicate a fall in ranking. The value of the integer would indicate the extent of change i.e. larger integer implies greater change.
- Will also be examining peak rank and weeks on chart

### Placeholder for Correlation Matrix
```{r}
library(plotly)
# NEED TO ADD NEW COLUMN CALCULATING RANK-PREVRANK
global <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(track_name) %>% 
  mutate(track_total_streams = sum(streams)) %>% 
  distinct(track_name, .keep_all = TRUE)

# Compute the correlation matrix
correlation_matrix <- cor(global[, c("danceability", "energy", "key", "mode", "loudness", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration", "rank", "peak_rank", "weeks_on_chart")])

# Create interactive heatmap using plot_ly
heatmap <- plot_ly(
  x = colnames(correlation_matrix),
  y = colnames(correlation_matrix),
  z = correlation_matrix,
  type = "heatmap",
  colorscale = "Portland",
  colorbar = list(title = "Correlation"),
  text = correlation_matrix,
  hoverinfo = "text"
)

# Show the interactive heatmap
heatmap
```

## Other Factors (KIV)
- Does release_date have any influence? Maybe can see 50 songs with the earliest release_date so that we can see if they have any similar attributes
- Artist genre?

## Conclusion
- What are the most important song attributes influencing a song's popularity?
- What is the ideal range for duration of a song?
- What genre? 
- Do these answers differ based on language and region?