---
filters:
  - shinylive
execute: 
  eval: true
  echo: false
  warning: false
---

## Harmony Across Culture: The Essence of Music

Music, a universal language, intricately weaves itself into the very fabric of diverse societies, becoming a profound expression of culture. Across communities worldwide, music stands as a unifying force, transcending differences and fostering a shared connection among people.

### **Unlocking Music in Business and Communication**

Beyond its cultural significance, music holds hidden potential, particularly in the realms of business and communication. Unraveling the factors shaping song popularity offers artists and marketers invaluable insights into audience preferences. This understanding enables the creation of content that resonates deeply with diverse communities. From a communication perspective, popular songs act as poignant reflections of collective sentiments, encapsulating societal moods, highlighting emerging trends, and embodying cultural shifts.

### **From Data to Narratives**

The question we're answering today is: [**what factors shape the popularity of songs in today's diverse music landscape?**]{.underline} Before delving into the specifics, we'll provide a panoramic overview of the music landscape as of January 2022.

::: {.callout-note appearance="simple"}
*This analysis draws from Spotify's 'Weekly Top Songs' charts, encompassing both individual countries and the global scene throughout January 2022. The raw data set can be found on [Kaggle](https://www.kaggle.com/datasets/yelexa/spotify200).*
:::

```{r, echo=FALSE, message=FALSE}
# Load library
library(tidyverse)
library(ggplot2)
library(ggiraph) # To make ggplot2 interactive
library(plotly)
library(forcats)
library(scales)
library(svglite) # For ggplot Carousel
library(slickR) # For ggplot Carousel 

# Read CSV file
raw <- read_csv("Jan2022_Spotify_Weekly_Top_200_Songs_Streaming_Data_by_country_view_view.csv")

# Remove unnecessary columns
spotify <- subset(raw, select = -c(X_1, artists_num, collab, album_num_tracks, pivot))
```

## A Snapshot of the Music Industry

::: panel-tabset
## Top 10 Artists

-   **The Weeknd** claims the top spot, commanding a remarkable total of over 700 million streams
-   **Pop** is the predominant genre among these elite top 10 Spotify artists.

```{r}
#| out.width: "90%"
#| label: fig-top10artist
#| fig-cap: Top 10 Spotify Artists in January 2022

# Manipulate data set to obtain top 10 tracks from the "Global" charts

globaltop10artists <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(artist_individual) %>% 
  mutate(artist_total_streams = sum(streams)) %>% 
  distinct(artist_individual, .keep_all = TRUE) %>%
  select(artist_individual, artist_id, artist_img, artist_total_streams, artist_genre) %>%
  arrange(desc(artist_total_streams)) %>%
  head(globaltop10artists, n=10)


# Create Top 10 Artist plotly graph
fig_globaltop10artists <- ggplot(globaltop10artists, 
            aes(x = artist_total_streams, 
                y = fct_reorder(artist_individual, artist_total_streams),
                customdata = artist_id,
                text = paste("</br>Total Streams:", artist_total_streams,
                             "</br>Artist Link: <a href=", artist_id, 
                             " target='_blank'>", artist_id, "</a>",
                             "</br>Artist Genre:", artist_genre))) +
  geom_col() +
  theme(axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) + 
  labs(x="Total Streams", title = "Top 10 Spotify Artists")

fig_globaltop10artists <- ggplotly(fig_globaltop10artists, tooltip = "text") %>%
  layout(hoverlabel = list(bgcolor = "white", 
                           bordercolor = "black",
                           align = "left",
                           persistent = TRUE),
         hovertemplate = "%{text}<extra></extra>") %>%
  layout(title = list(text = "Top 10 Spotify Artists", x = 0.5, y = 0.95, xanchor = "center", yanchor = "top"))

fig_globaltop10artists
```

```{r}
#| out.width: "90%"
#| label: fig-top10artistwc
#| fig-cap: Genres of the Top 10 Spotify Artists
# Create a new data frame with unique words in artist genre and their frequencies
genre_frequency_df <- globaltop10artists %>%
  separate_rows(artist_genre, sep = " ") %>%
  group_by(word = tolower(artist_genre)) %>%
  summarise(frequency = n())

# Print the new data frame
#print(word_frequency_df)

# library
library(wordcloud2) 
 
# have a look to the example dataset
# head(demoFreq)

# Basic plot
genre_wc <- wordcloud2(data=genre_frequency_df, size=1,
                       fontFamily = "Verdana", fontWeight = "bold",
           color=rep_len(c("lightgreen","grey"), nrow(genre_frequency_df)),
           shape = "circle")
genre_wc
```

## Top 10 Songs

-   An intriguing observation arises as we note that **the creators behind the top 10 songs differ from the artists in the top 10 list**
-   This variance may suggest a **distinction between short-term and long-term popularity**, given that the artists behind these songs seem to have achieved recognition primarily through a single hit

```{r}
#| out.width: "90%"
#| label: fig-top10songs
#| fig-cap: Top 10 Spotify Songs in January 2022

# Manipulate data set to obtain top 10 tracks from the "Global" charts

globaltop10tracks <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(track_name) %>% 
  mutate(track_total_streams = sum(streams)) %>% 
  distinct(track_name, .keep_all = TRUE) %>% 
  select(uri, track_name, artist_names, album_cover, track_total_streams) %>%
  arrange(desc(track_total_streams)) %>%
  head(globaltop10tracks, n=10)

# Create Top 10 Tracks plotly graph
fig_globaltop10tracks <- ggplot(globaltop10tracks, 
            aes(x = track_total_streams, 
                y = fct_reorder(track_name, track_total_streams),
                customdata = uri,
                text = paste("</br>Total Streams:", track_total_streams,
                             "</br>Artists:", str_wrap(artist_names, width = 50),
                              "</br>Track Link: <a href=", uri, 
                             " target='_blank'>", uri, "</a>"))) +
  geom_col() +
  theme(axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) + 
  labs(x="Total Streams", title = "Top 10 Spotify Songs")

fig_globaltop10tracks <- ggplotly(fig_globaltop10tracks, tooltip = "text") %>%
  layout(hoverlabel = list(bgcolor = "white", 
                           bordercolor = "black",
                           align = "left",
                           persistent = TRUE),
         hovertemplate = "%{text}<extra></extra>") %>%
  layout(title = list(text = "Top 10 Spotify Songs", x = 0.5, y = 0.95, xanchor = "center", yanchor = "top"))

fig_globaltop10tracks
```

## Distribution of Song Attributes

> Explore the interface below to uncover song attribute distributions!
>
> The source for these attributes' descriptions can be found [here](https://developer.spotify.com/documentation/web-api/reference/get-several-audio-features).

<iframe height="800" width="100%" frameborder="no" src="https://howeini.shinyapps.io/AttributeDist/">

</iframe>

::: {.callout-tip appearance="simple"}
*In the overarching melody of January 2022, prevailing songs boast the following characteristics:*

-   *Danceable*
-   *Exhibiting Moderate to High Energy*
-   *Sparse in Speech Elements*
-   *Leaning towards Non-acoustic Tones*
-   *Highly Probable Vocal Presence*
-   *Unlikely to be a Live Performance*
-   *Balancing Positive and Negative Vibes*
-   *Resonating in the C♯/D♭ Key*
-   *Harmonizing with the Major Scale*
-   *Settling into a Standard Volume Range*
-   *Showcasing a Varied Pace*
-   *Clocking in at Approximately 3 Minutes in Length*
:::
:::

## Exploring Popularity Dynamics

To delve into the intricacies of song popularity, our analysis unfolds along the lines of long-term and short-term dynamics.

::: panel-tabset
## Long-term Popularity

### Understanding Long-term Popularity

Long-term popularity is gauged by a song's total streams throughout January, encompassing all charts. Songs with enduring appeal possess what we might call "timeless" attributes --- characteristics we seek to unearth in our analysis.

#### Correlation Matrix

::: {.callout-tip appearance="simple"}
The correlation coefficient has 2 important features:

-   **Sign (positive/negative):** Positive correlation indicates that as attribute value increase, the total streams of the song tend to follow suit. Conversely, a negative correlation signals a decline in total streams as the attribute value rises.

-   **Magnitude (value):** Values closer to 1 (or -1) represent stronger correlations.
:::

```{r}
#| out.width: "90%"
#| label: fig-corrlt
#| fig-cap: Correlation Matrix Between Total Streams and Attributes
library(plotly)

global <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(track_name) %>% 
  mutate(song_total_streams = sum(streams)) %>% 
  distinct(track_name, .keep_all = TRUE)

# Compute the correlation matrix
correlation_matrix <- cor(global[, c("danceability", "energy", "key", "mode", "loudness", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration", "song_total_streams")])

# Create interactive heatmap using plot_ly
heatmap <- plot_ly(
  x = colnames(correlation_matrix),
  y = colnames(correlation_matrix),
  z = correlation_matrix,
  type = "heatmap",
  colorscale = "Portland",
  colorbar = list(title = "Correlation"),
  text = correlation_matrix,
  hoverinfo = "text"
)

# Show the interactive heatmap
heatmap
```

Total streams appears to have the strongest positive correlation with valence and danceability, and the strongest negative correlation with mode and acousticness. This means songs that often carry a timeless vibe, fall into the Minor scale, radiate positive energy, are great for dancing, and maintain a balance with less acoustic sound.

## Short-term Popularity

### Understanding Short-term Popularity

Short-term popularity is analyzing rank changes. A negative value indicates a rise, while a positive value signals a fall in the charts. The magnitude of the integer reflects the extent of the change. We also examine peak rank and weeks on the chart for a comprehensive view of short-term popularity dynamics.

::: {.callout-important appearance="simple"}
Rank change is calculated by subtracting the previous rank from the current rank. It's important to note that a lower rank is better, with 1 being the highest!
:::

#### Correlation Matrix

```{r}
#| out.width: "90%"
#| label: fig-corrst
#| fig-cap: Correlation Matrix Between Change in Rank, Peak Rank, Weeks on Chart and Attributes

library(plotly)
global <- spotify %>% 
  filter(country == "Global") %>% 
  group_by(track_name) %>% 
  mutate(track_total_streams = sum(streams),
         change_rank = rank - previous_rank) %>% 
  distinct(track_name, .keep_all = TRUE)

# Compute the correlation matrix
correlation_matrix <- cor(global[, c("danceability", "energy", "key", "mode", "loudness", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration", "change_rank", "peak_rank", "weeks_on_chart")])

# Create interactive heatmap using plot_ly
heatmap <- plot_ly(
  x = colnames(correlation_matrix),
  y = colnames(correlation_matrix),
  z = correlation_matrix,
  type = "heatmap",
  colorscale = "Portland",
  colorbar = list(title = "Correlation"),
  text = correlation_matrix,
  hoverinfo = "text"
)

# Show the interactive heatmap
heatmap
```
Energy and loudness show the most significant negative correlation with rank change. Danceability has the most substantial negative correlation with peak rank. Acousticness exhibits the most notable positive correlation with weeks on the chart. In short-term popularity, lively and loud songs tend to drop in rank less, while danceable tunes aim for higher peak positions. Additionally, songs with acoustic qualities often stay longer on the charts.
:::

## Comparing Global and Local Trends

<iframe height="500" width="100%" frameborder="no" src="https://howeini.shinyapps.io/WorldMap/">

</iframe>

-   Does release_date have any influence? Maybe can see 50 songs with the earliest release_date so that we can see if they have any similar attributes
-   Artist genre?

## Conclusion

-   What are the most important song attributes influencing a song's popularity?
-   What is the ideal range for duration of a song?
-   What genre?
-   Do these answers differ based on language and region?
