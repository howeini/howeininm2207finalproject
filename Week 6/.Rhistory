setwd("~/Desktop/NUS/NM2207/Week 6")
knitr::opts_chunk$set(echo = TRUE)
for (x in c(3, 6, 9)) {
print(x)
}
for (x in 1:8) {print(x)}
for (x in 1:8) {
y <- seq(from=100, to=200, by=5)
print(y[x])
}
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_means[[i]] <- mean(rnorm(sample_sizes[[i]]))
}
sample_means
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_means[[i]] <- mean(rnorm(sample_sizes[[i]]))
}
sample_means
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_means[[i]] <- mean(rnorm(sample_sizes[[i]]))
}
sample_means
# Example 3 for data_type=double
sample_means <- rep(o, length(sample_sizes))
# Example 3 for data_type=double
sample_means <- rep(0, length(sample_sizes))
# Initialisation of data_list
data_list <- vector("list", length = 5)
a <- 7:11
b <- 8:12
out <- rep(0L, 5)
for (i in seq_along(a)) {
out[i] <- a[i] + b[i]
}
out
a <- 7:11
b <- 8:12
out <- rep(0L, 5)
for (i in seq_along(a)) {
out[i] <- a[i] + b[i]
}
out
a <- 7:11
b <- 8:12
out <- a + b
out
# Slide 23
sample_sizes <- c(5, 10, 15, 20, 25000)
fsd <- function(sample_sizes) {
sample_sds <- rep(0, length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_sds[1] <- sd(rnorm(sample_sizes[i]))
}
}
# Slide 24
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_summary <- function(sample_sizes, fun) {
out <- vector("double", length(sample_sizes))
for (i in seq_along(sample_sizes)) {
out[i] <- fun(rnorm(sample_sizes[i]))
}
return(out)
}
#Compute mean
sample_summary(sample_sizes, mean)
# Compute median
sample_summary(sample_sizes, median)
# Compute sd
sample_summary(sample_sizes, sd)
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_summary <- function(sample_sizes, fun) {
out <- vector("double", length(sample_sizes))
for (i in seq_along(sample_sizes)) {
out[i] <- fun(rnorm(sample_sizes[i]))
}
return(out)
}
#Compute mean
sample_summary(sample_sizes, mean)
# Compute median
sample_summary(sample_sizes, median)
# Compute sd
sample_summary(sample_sizes, sd)
for (i in 1:5) {
print(i)
}
i <- 1
while (i <= 5) {
print(i)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("images/countdown.png")
knitr::include_graphics("images/blastoff.png")
i <- 1
while (i <= 10) {
print(cat(i))
}
i <- 1
while (i <= 10) {
print(cat(i))
i <- i + 1
}
i <- 1
while (i <= 10) {
print(cat(i, ""))
i <- i + 1
}
?cat
i <- 1
while (i <= 10) {
print(cat(i, file = "", sep = "...", fill = FALSE))
i <- i + 1
}
?cat
iter <- stats::rpois(1, lambda = 10)
## print an informative message
cat("iteration = ", iter <- iter + 1, "\n")
i <- 1
while (i <= 10) {
print(cat(i, file = "", sep = "...", fill = FALSE))
i <- i + 1
}
?cat
iter <- stats::rpois(1, lambda = 10)
## print an informative message
cat("iteration = ", iter <- iter + 1, "\n")
i <- 1
while (i <= 10) {
print(cat(i, file = "", sep = "...", fill = FALSE))
i <- i + 1
}
?cat
i <- 1
while (i <= 10) {
print(cat(int(i), file = "", sep = "...", fill = FALSE))
i <- i + 1
}
i <- 1
while (i <= 10) {
print(cat(integer(i), file = "", sep = "...", fill = FALSE))
i <- i + 1
}
?cat
i <- 1
while (i <= 10) {
cat(i,"...")
i <- i + 1
}
?cat
i <- 10
while (i >= 1) {
cat(i,"...")
i <- i - 1
}
?cat
i <- 10
while (i >= 1) {
cat(i,"...")
Sys.sleep(1)
i <- i - 1
}
?cat
i <- 10
while (i >= 1) {
cat(i,"...")
Sys.sleep(1)
i <- i - 1
}
print("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
Sys.sleep(1)
i <- i - 1
}
print("\n Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
print("\n")
print("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
cat("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
print("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
print(Blastoff!)
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
print("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
cat("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...", "\n")
#Sys.sleep(1)
i <- i - 1
}
cat("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
cat
cat("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
cat("Blastoff!")
i <- 10
while (i >= 1) {
cat(i,"...")
#Sys.sleep(1)
i <- i - 1
}
cat("\n","Blastoff!")
```
x <- c(1.8, 'a')
typeof(x)
x <- c(1.8, 'a', 5L)
typeof(x)
x <- c(1.8, 5L)
typeof(x)
x <- c(1.8, TRUE)
typeof(x)
x <- c(TRUE, 5L)
typeof(x)
x <- c(1)
print(x)
x <- c(20, 18)
print(x)
x <- c(1)
print(x)
x <- c(20, 18)
x <- c(1)
print(x)
x <- c(20, 18)
print(x)
x <- c(1)
print(x)
x <- c(x, 20, 18)
print(x)
```
z <- 1
foo <- function(z = 2) {
# reassigning z
z <- 3
return(z+3)
}
foo(z = 5)
sprintf("The value assigned to z outside the function is %d",z)
calc_sample_mean <- function(sample_size) {
random_sample <- rnorm(sample_size)
sample_mean <- mean(rnorm(sample_size))
return(sample_mean)
}
calc_sample_mean(100)
calc_sample_mean <- function(sample_size) {
random_sample <- rnorm(sample_size)
sample_mean <- mean(rnorm(sample_size))
return(sample_mean)
}
z <- 1
foo <- function(z = 2) {
# reassigning z
z <- 3
return(z+3)
}
foo(z = 5)
sprintf("The value assigned to z outside the function is %d",z)
calc_sample_mean <- function(sample_size) {
random_sample <- rnorm(sample_size)
sample_mean <- mean(rnorm(sample_size))
return(sample_mean)
}
calc_sample_mean(100)
z <- 1
foo <- function(z = 2) {
# reassigning z
z <- 3
return(z+3)
}
foo(z = 5)
sprintf("The value assigned to z outside the function is %d",z)
calc_sample_mean <- function(sample_size) {
random_sample <- rnorm(sample_size)
sample_mean <- mean(rnorm(sample_size))
return(sample_mean)
}
calc_sample_mean()
add_two <- function(x) {
x+2
}
add_two(250)
divide_two <- function(x) {
return(x/2)
return(x)
}
divide_two(250)
knitr::opts_chunk$set(echo = TRUE)
word <- readline(prompt = "Enter a word: ")
reversedword <- ""
i <- nchar(word)
while (i > 0) {
char <- substr(word, i, i)
reversedword <- paste0(reversedword, char)
i <- i - 1
}
print(reversedword)
#word <- readline(prompt = "Enter a word: ")
#reversedword <- ""
#i <- nchar(word)
#while (i > 0) {
#  char <- substr(word, i, i)
#  reversedword <- paste0(reversedword, char)
#  i <- i - 1
#}
#print(reversedword)
?as.logical
#word <- readline(prompt = "Enter a word: ")
#reversedword <- ""
#i <- nchar(word)
#while (i > 0) {
#  char <- substr(word, i, i)
#  reversedword <- paste0(reversedword, char)
#  i <- i - 1
#}
#print(reversedword)
x<-c(1,"4",7,10.00,6L)
print(typeof(x))
#word <- readline(prompt = "Enter a word: ")
#reversedword <- ""
#i <- nchar(word)
#while (i > 0) {
#  char <- substr(word, i, i)
#  reversedword <- paste0(reversedword, char)
#  i <- i - 1
#}
#print(reversedword)
x<-c(1,"4",7,10.00,6L)
print(typeof(x[5]))
#word <- readline(prompt = "Enter a word: ")
#reversedword <- ""
#i <- nchar(word)
#while (i > 0) {
#  char <- substr(word, i, i)
#  reversedword <- paste0(reversedword, char)
#  i <- i - 1
#}
#print(reversedword)
x<-c(1,"4",7,10.00,6L)
print(typeof(x[5]))
print(x[5])
#word <- readline(prompt = "Enter a word: ")
#reversedword <- ""
#i <- nchar(word)
#while (i > 0) {
#  char <- substr(word, i, i)
#  reversedword <- paste0(reversedword, char)
#  i <- i - 1
#}
#print(reversedword)
x<-c(1,"4",7,10.00,6L)
print(typeof(x))
print(x[5])
print(typeof(x[5]))
titanic <- read_csv("titanic.csv")
